name: Build & Deploy (twoâ€‘container stack)

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: hello-php
  SSH_HOST: ${{ secrets.HOST }}
  SSH_USER: ${{ secrets.USERNAME }}
  SSH_KEY:  ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Build PHP image
        run: docker build -t $IMAGE_NAME -f php.Dockerfile .

      - name: Save & gzip image
        run: docker save $IMAGE_NAME | gzip > $IMAGE_NAME.tar.gz

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          source: |
            ./docker-compose.yml
            ./nginx/default.conf
            ./${{ env.IMAGE_NAME }}.tar.gz
          target: /home/${{ env.SSH_USER }}/deploy   # keeps $HOME tidy
          overwrite: true

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            set -e
            cd ~/deploy

            # 1. Ensure Docker + Compose v2
            if ! command -v docker >/dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl enable --now docker
            fi
            if ! docker compose version >/dev/null 2>&1; then
              sudo mkdir -p /usr/local/lib/docker/cli-plugins
              sudo curl -sSL \
                https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-linux-x86_64 \
                -o /usr/local/lib/docker/cli-plugins/docker-compose
              sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
            fi

            # 2. Load the PHP image
            gunzip -c $IMAGE_NAME.tar.gz | sudo docker load

            # 3. Launch (or update) the stack
            sudo docker compose up -d --remove-orphans

            # 4. Show status
            sudo docker compose ps
