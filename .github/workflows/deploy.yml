name: Build & Deploy (two-container stack)

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: php-app              # choose any tag you like
  SSH_HOST: ${{ secrets.HOST }}
  SSH_USER: ${{ secrets.USERNAME }}
  SSH_KEY:  ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-ship:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1. Build the PHP image with code
      - name: Build PHP image
        run: docker build -f php.Dockerfile -t $IMAGE_NAME .

      # 2. Save & gzip (5× smaller than raw tar)
      - name: Save image as tar.gz
        run: docker save $IMAGE_NAME | gzip > $IMAGE_NAME.tar.gz

      # 3. Copy project & tar to EC2
      - name: SCP project to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          # copy compose file, nginx conf, image tar, and src
          source: |
            docker-compose.yml
            nginx/default.conf
            $IMAGE_NAME.tar.gz
          target: /home/${{ env.SSH_USER }}/app
          tar_dereference: false

      # 4. SSH: load image, install docker-compose, run stack
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            set -e
            cd ~/app

            # Install Docker & Compose v2 if missing
            if ! command -v docker >/dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl enable --now docker
            fi
            if ! docker compose version >/dev/null 2>&1; then
              sudo curl -SL https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose
              sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
            fi

            # Load the freshly‑built PHP image
            gunzip -c $IMAGE_NAME.tar.gz | sudo docker load

            # Start (or update) the stack
            sudo docker compose pull nginx:1.27-alpine || true
            sudo docker compose up -d    # will recreate only changed services

            sudo docker compose ps
